<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="SubExplore.Views.Map.MapPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:maps="clr-namespace:Microsoft.Maui.Controls.Maps;assembly=Microsoft.Maui.Controls.Maps"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:converters="clr-namespace:SubExplore.Helpers.Converters"
    xmlns:viewmodels="clr-namespace:SubExplore.ViewModels.Map"
    xmlns:common="clr-namespace:SubExplore.Views.Common"
    xmlns:domain="clr-namespace:SubExplore.Models.Domain"
    x:DataType="viewmodels:MapViewModel"
    Title="Carte"
    BackgroundColor="{StaticResource Background}">
    
    
    <ContentPage.Resources>
        <converters:ResponsiveMarginConverter x:Key="ResponsiveMarginConverter" />
        <converters:ResponsiveFontSizeConverter x:Key="ResponsiveFontSizeConverter" />
        <converters:ResponsiveHeightConverter x:Key="ResponsiveHeightConverter" />
        <converters:SpotToLocationConverter x:Key="SpotToLocationConverter" />
    </ContentPage.Resources>


    <ContentPage.Behaviors>
        <toolkit:EventToCommandBehavior Command="{Binding InitializeMapCommand}" EventName="Appearing" />
    </ContentPage.Behaviors>

    <Grid>
        <!-- Main Content -->
        <Grid RowDefinitions="Auto,*,Auto">
        
        <!-- Search Bar -->
        <Frame Grid.Row="0" 
               BackgroundColor="{StaticResource Surface}"
               BorderColor="{StaticResource Secondary}"
               CornerRadius="25"
               Padding="5"
               HasShadow="True"
               Margin="{Binding Source={x:Static Device.RuntimePlatform}, Converter={StaticResource ResponsiveMarginConverter}, ConverterParameter='8:10:12'}"
               AutomationId="SearchFrame"
               SemanticProperties.Description="Zone de recherche de spots">
            <Grid ColumnDefinitions="*,Auto">
                <Entry Grid.Column="0"
                       x:Name="SearchEntry"
                       Margin="5,0"
                       ClearButtonVisibility="WhileEditing"
                       Placeholder="Rechercher un spot..."
                       ReturnCommand="{Binding SearchSpotsCommand}"
                       ReturnType="Search"
                       Text="{Binding SearchText}"
                       FontSize="{Binding Source={x:Static Device.RuntimePlatform}, Converter={StaticResource ResponsiveFontSizeConverter}, ConverterParameter='1.0'}"
                       IsEnabled="{Binding IsSearching, Converter={StaticResource InvertBoolConverter}}"
                       AutomationId="SearchEntry"
                       SemanticProperties.Description="Rechercher des spots de plongée par nom ou localisation"
                       SemanticProperties.Hint="Entrez le nom d'un spot ou d'une localisation pour effectuer une recherche">
                    <Entry.Behaviors>
                        <toolkit:EventToCommandBehavior EventName="TextChanged" Command="{Binding SearchTextChangedCommand}" />
                    </Entry.Behaviors>
                </Entry>
                <Button Grid.Column="1"
                        Command="{Binding SearchSpotsCommand}"
                        Style="{StaticResource ButtonActionStyle}"
                        Text="Rechercher"
                        IsEnabled="{Binding IsSearching, Converter={StaticResource InvertBoolConverter}}"
                        AutomationId="SearchButton"
                        SemanticProperties.Description="Lancer la recherche de spots"
                        SemanticProperties.Hint="Appuyez pour rechercher des spots correspondant au texte saisi">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsSearching}" Value="True">
                            <Setter Property="Text" Value="Recherche..." />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
            </Grid>
        </Frame>
        
        <RefreshView Grid.Row="1" Command="{Binding LoadSpotsCommand}" IsRefreshing="{Binding IsBusy}">
            <Grid RowDefinitions="Auto,*,Auto">
                
                <!--  Barre de filtres intégrée  -->
                <ScrollView 
                    Grid.Row="0"
                    Margin="{Binding Source={x:Static Device.RuntimePlatform}, Converter={StaticResource ResponsiveMarginConverter}, ConverterParameter='8:10:12'}"
                    HorizontalScrollBarVisibility="Never" 
                    Orientation="Horizontal"
                    AutomationId="FiltersScrollView"
                    SemanticProperties.Description="Zone de filtres des spots - Balayez horizontalement pour voir plus d'options"
                    SemanticProperties.Hint="Balayez vers la droite pour découvrir d'autres types de spots">
                    <HorizontalStackLayout Spacing="6" Padding="8,8,24,8">
                        <Button
                            Command="{Binding ClearFiltersCommand}"
                            Style="{StaticResource ButtonFilterStyle}"
                            Text="Tous"
                            FontSize="{Binding Source={x:Static Device.RuntimePlatform}, Converter={StaticResource ResponsiveFontSizeConverter}, ConverterParameter='0.9'}"
                            CornerRadius="8"
                            Padding="14,8"
                            AutomationId="ClearFiltersButton"
                            SemanticProperties.Description="Afficher tous les types de spots"
                            SemanticProperties.Hint="Appuyez pour supprimer tous les filtres et afficher tous les spots">
                            <Button.Triggers>
                                <DataTrigger TargetType="Button" Binding="{Binding SelectedSpotType}" Value="{x:Null}">
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                    <Setter Property="TextColor" Value="White" />
                                </DataTrigger>
                            </Button.Triggers>
                        </Button>

                        <CollectionView
                            ItemsSource="{Binding SpotTypes}"
                            SelectionMode="None"
                            AutomationId="SpotTypesFilter"
                            SemanticProperties.Description="Filtrer les spots par type d'activité - Balayez pour voir plus d'options">
                            <CollectionView.ItemsLayout>
                                <LinearItemsLayout ItemSpacing="6" Orientation="Horizontal" />
                            </CollectionView.ItemsLayout>
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="domain:SpotType">
                                    <Button
                                        BackgroundColor="{Binding ColorCode}"
                                        Style="{StaticResource ButtonFilterStyle}"
                                        Text="{Binding Name}"
                                        TextColor="White"
                                        FontSize="{Binding Source={x:Static Device.RuntimePlatform}, Converter={StaticResource ResponsiveFontSizeConverter}, ConverterParameter='0.9'}"
                                        CornerRadius="8"
                                        Padding="14,8"
                                        Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:MapViewModel}}, Path=FilterSpotsByTypeCommand}"
                                        CommandParameter="{Binding .}"
                                        AutomationId="{Binding Name, StringFormat='Filter{0}Button'}"
                                        SemanticProperties.Description="{Binding Name, StringFormat='Filtrer par {0}'}"
                                        SemanticProperties.Hint="{Binding Name, StringFormat='Appuyez pour afficher uniquement les spots de type {0}'}" />
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </HorizontalStackLayout>
                </ScrollView>

        <!--  Carte responsive  -->
        <Grid Grid.Row="1">
            <maps:Map
                x:Name="MainMap"
                IsShowingUser="{Binding IsLocationAvailable}"
                MapClicked="OnMapClicked"
                MapType="Street"
                HorizontalOptions="FillAndExpand"
                VerticalOptions="FillAndExpand"
                IsZoomEnabled="True"
                IsScrollEnabled="True"
                AutomationId="MainMap"
                SemanticProperties.Description="Carte interactive des spots de plongée"
                SemanticProperties.Hint="Explorez les spots de plongée sur la carte, cliquez près d'un marqueur pour voir les détails">
                
            <maps:Map.MapElements>
                <!--  Custom spot markers will be added programmatically in code-behind  -->
            </maps:Map.MapElements>
            </maps:Map>
            
            
            <!--  État vide  -->
            <StackLayout
                IsVisible="{Binding IsEmptyState}"
                HorizontalOptions="Center"
                VerticalOptions="Center"
                Spacing="10">
                <Label
                    Text=""
                    FontSize="48"
                    HorizontalOptions="Center" />
                <Label
                    Text="Aucun spot trouvé"
                    Style="{StaticResource SubHeadline}"
                    HorizontalOptions="Center" />
                <Label
                    Text="Essayez d'ajuster vos filtres ou votre recherche"
                    Style="{StaticResource Caption}"
                    HorizontalOptions="Center"
                    HorizontalTextAlignment="Center" />
            </StackLayout>
            
            <!--  État d'erreur réseau  -->
            <StackLayout
                IsVisible="{Binding IsNetworkError}"
                HorizontalOptions="Center"
                VerticalOptions="Center"
                Spacing="10">
                <Label
                    Text=""
                    FontSize="48"
                    HorizontalOptions="Center" />
                <Label
                    Text="Connexion limitée"
                    Style="{StaticResource SubHeadline}"
                    HorizontalOptions="Center" />
                <Button
                    Text="Réessayer"
                    Command="{Binding LoadSpotsCommand}"
                    Style="{StaticResource ButtonPrimaryStyle}"
                    HorizontalOptions="Center" />
            </StackLayout>
        </Grid>

        <!--  Barre d'actions simplifiée - Boutons colorés pleine largeur  -->
        <Grid 
            Grid.Row="2"
            ColumnDefinitions="*,*,*" 
            ColumnSpacing="8"
            Margin="{Binding Source={x:Static Device.RuntimePlatform}, Converter={StaticResource ResponsiveMarginConverter}, ConverterParameter='12:15:18'}"
            AutomationId="ActionsGrid"
            SemanticProperties.Description="Barre d'actions principales de la carte">
            
            <!-- Button 1: Actualiser -->
            <Button
                Grid.Column="0"
                Command="{Binding LoadSpotsCommand}"
                Style="{StaticResource ButtonMapActionStyle}"
                Text="Actualiser"
                IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolConverter}}"
                AutomationId="RefreshSpotsButton"
                SemanticProperties.Description="Actualiser les spots sur la carte"
                SemanticProperties.Hint="Appuyez pour recharger les spots depuis le serveur">
                <Button.Triggers>
                    <DataTrigger TargetType="Button" Binding="{Binding IsBusy}" Value="True">
                        <Setter Property="Text" Value="Actualiser..." />
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </Button.Triggers>
            </Button>
            
            <!-- Button 2: Ma position -->
            <Button
                Grid.Column="1"
                Command="{Binding RefreshLocationCommand}"
                Style="{StaticResource ButtonMapActionStyle}"
                Text="Localiser"
                AutomationId="MyLocationButton"
                SemanticProperties.Description="Centrer la carte sur ma position actuelle"
                SemanticProperties.Hint="Appuyez pour obtenir votre position GPS et centrer la carte">
                <Button.Triggers>
                    <DataTrigger TargetType="Button" Binding="{Binding IsLocationAvailable}" Value="True">
                        <Setter Property="Text" Value="Ma position" />
                    </DataTrigger>
                    <DataTrigger TargetType="Button" Binding="{Binding IsLocationAvailable}" Value="False">
                        <Setter Property="Text" Value="Localiser" />
                    </DataTrigger>
                </Button.Triggers>
            </Button>
            
            <!-- Button 3: Nouveau spot -->
            <Button
                Grid.Column="2"
                Command="{Binding NavigateToAddSpotCommand}"
                Style="{StaticResource ButtonMapActionStyle}"
                Text="Nouveau"
                AutomationId="AddSpotButton"
                SemanticProperties.Description="Ajouter un nouveau spot de plongée"
                SemanticProperties.Hint="Appuyez pour commencer l'ajout d'un nouveau spot" />
        </Grid>

            </Grid>
        </RefreshView>
        
            <!--  Indicateur de chargement amélioré  -->
            <Grid
                Grid.Row="0"
                Grid.RowSpan="3"
                IsVisible="{Binding IsBusy}"
                BackgroundColor="{AppThemeBinding Light=#80000000, Dark=#80FFFFFF}"
                AutomationId="LoadingOverlay">
            <Frame
                HorizontalOptions="Center"
                VerticalOptions="Center"
                BackgroundColor="{StaticResource Surface}"
                CornerRadius="15"
                Padding="20"
                HasShadow="True">
                <StackLayout Orientation="Horizontal" Spacing="10">
                    <ActivityIndicator
                        IsRunning="{Binding IsBusy}"
                        Color="{StaticResource Primary}"
                        AutomationId="LoadingIndicator" />
                    <Label
                        Text="Chargement..."
                        VerticalOptions="Center"
                        Style="{StaticResource BodyText}"
                        SemanticProperties.Description="Chargement des données en cours"
                        SemanticProperties.Hint="Veuillez patienter pendant le chargement des spots" />
                </StackLayout>
            </Frame>
        </Grid>
        </Grid>
        
        <!-- Custom Spot Window - Shows spot info with details button -->
        <Frame x:Name="SpotMiniWindow"
               IsVisible="{Binding IsSpotMiniWindowVisible}"
               BackgroundColor="{StaticResource Surface}"
               BorderColor="{StaticResource Primary}"
               CornerRadius="15"
               Padding="15"
               HasShadow="True"
               VerticalOptions="End"
               HorizontalOptions="Center"
               Margin="20,0,20,80"
               WidthRequest="300"
               HeightRequest="200"
               InputTransparent="False"
               AutomationId="SpotMiniWindow"
               SemanticProperties.Description="Aperçu du spot sélectionné">
            
            <Grid RowDefinitions="Auto,Auto,Auto,Auto" RowSpacing="8">
                <!-- Close Button -->
                <Button Grid.Row="0"
                        Text="✕"
                        FontSize="16"
                        BackgroundColor="Transparent"
                        TextColor="{StaticResource TextSecondary}"
                        Command="{Binding CloseSpotMiniWindowCommand}"
                        HorizontalOptions="End"
                        VerticalOptions="Start"
                        WidthRequest="30"
                        HeightRequest="30"
                        CornerRadius="15"
                        Padding="0"
                        AutomationId="CloseMiniWindowButton"
                        SemanticProperties.Description="Fermer l'aperçu du spot" />
                
                <!-- Spot Name -->
                <Label Grid.Row="1"
                       Text="{Binding SelectedSpot.Name}"
                       FontSize="18"
                       FontAttributes="Bold"
                       TextColor="{StaticResource TextPrimary}"
                       HorizontalOptions="Center"
                       HorizontalTextAlignment="Center"
                       LineBreakMode="TailTruncation"
                       MaxLines="2"
                       AutomationId="SpotNameLabel"
                       SemanticProperties.Description="Nom du spot" />
                
                <!-- Activity Type and Level -->
                <Grid Grid.Row="2" ColumnDefinitions="*,*" ColumnSpacing="10">
                    <Frame Grid.Column="0"
                           BackgroundColor="{Binding SelectedSpot.Type.ColorCode, FallbackValue={StaticResource Primary}}"
                           CornerRadius="8"
                           Padding="8,4"
                           HasShadow="False">
                        <Label Text="{Binding SelectedSpot.Type.Name, FallbackValue='Spot'}"
                               FontSize="12"
                               FontAttributes="Bold"
                               TextColor="White"
                               HorizontalOptions="Center"
                               VerticalOptions="Center"
                               LineBreakMode="TailTruncation"
                               AutomationId="SpotTypeLabel"
                               SemanticProperties.Description="Type d'activité" />
                    </Frame>
                    
                    <Frame Grid.Column="1"
                           BackgroundColor="{StaticResource Secondary}"
                           CornerRadius="8"
                           Padding="8,4"
                           HasShadow="False">
                        <Label FontSize="12"
                               FontAttributes="Bold"
                               TextColor="White"
                               HorizontalOptions="Center"
                               VerticalOptions="Center"
                               AutomationId="SpotLevelLabel"
                               SemanticProperties.Description="Niveau de difficulté">
                            <Label.Text>
                                <MultiBinding StringFormat="Niveau {0}">
                                    <Binding Path="SelectedSpot.DifficultyLevel" Converter="{StaticResource DifficultyLevelToFrenchConverter}" />
                                </MultiBinding>
                            </Label.Text>
                        </Label>
                    </Frame>
                </Grid>
                
                <!-- View Details Button -->
                <Button Grid.Row="3"
                        Text="Voir les détails"
                        Command="{Binding ViewSpotDetailsCommand}"
                        Style="{StaticResource ButtonPrimaryStyle}"
                        FontSize="14"
                        CornerRadius="8"
                        Padding="20,8"
                        Margin="0,5,0,0"
                        AutomationId="ViewDetailsButton"
                        SemanticProperties.Description="Voir tous les détails du spot"
                        SemanticProperties.Hint="Appuyez pour ouvrir la page de détails complète du spot" />
            </Grid>
        </Frame>
        
    </Grid>
</ContentPage>