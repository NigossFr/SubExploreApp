<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="SubExplore.Views.Settings.DatabaseTestPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:SubExplore.Helpers.Converters"
    xmlns:viewmodels="clr-namespace:SubExplore.ViewModels.Settings"
    Title="{Binding Title}"
    x:DataType="viewmodels:DatabaseTestViewModel">

    <ContentPage.Resources>
        <converters:BoolToColorConverter x:Key="BoolToColorConverter" />
    </ContentPage.Resources>

    <ScrollView>
        <StackLayout Padding="20" Spacing="15">
            <Label
                FontAttributes="Bold"
                FontSize="20"
                Text="Status de la Base de Données" />
            <Frame
                Padding="15"
                BorderColor="#DDDDDD"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="État de la connexion" />
                    <Label Text="{Binding CanConnect, StringFormat='Connexion: {0}'}" TextColor="Magenta" />
                    <Button Command="{Binding TestConnectionCommand}" Text="Tester la connexion" />
                </StackLayout>
            </Frame>
            <Frame
                Padding="15"
                BorderColor="#DDDDDD"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="Structure de la base de données" />
                    <Label Text="{Binding IsDataSeeded, StringFormat='Données initialisées: {0}'}" TextColor="Magenta" />
                    <Button Command="{Binding EnsureDatabaseCreatedCommand}" Text="Créer le schéma" />
                </StackLayout>
            </Frame>
            <Frame
                Padding="15"
                BorderColor="#DDDDDD"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="Données initiales" />
                    <Label Text="{Binding IsDataSeeded, StringFormat='Données initialisées: {0}'}">
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsDataSeeded}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsDataSeeded}"
                                TargetType="Label"
                                Value="False">
                                <Setter Property="TextColor" Value="Red" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Button Command="{Binding SeedDatabaseCommand}" Text="Initialiser les données" />
                </StackLayout>
            </Frame>
            <Frame
                Padding="15"
                BorderColor="#FFAA00"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="🧹 Nettoyage des filtres" />
                    <Label Text="{Binding IsSpotTypesCleanedUp, StringFormat='Types de spots nettoyés: {0}'}">
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsSpotTypesCleanedUp}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsSpotTypesCleanedUp}"
                                TargetType="Label"
                                Value="False">
                                <Setter Property="TextColor" Value="Red" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Label Text="Supprime les anciens filtres et ne garde que les 5 types requis" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding CleanupSpotTypesCommand}" Text="🧹 Nettoyer les filtres obsolètes" BackgroundColor="#FF6B35" TextColor="White" />
                </StackLayout>
            </Frame>
            <Frame
                Padding="15"
                BorderColor="#00AA00"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="📍 Import des spots réels" />
                    <Label Text="{Binding IsRealSpotsImported, StringFormat='Spots réels importés: {0}'}">
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsRealSpotsImported}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsRealSpotsImported}"
                                TargetType="Label"
                                Value="False">
                                <Setter Property="TextColor" Value="Red" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Label Text="Importe les spots depuis le fichier Data/real_spots.json" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding ImportRealSpotsCommand}" Text="📍 Importer les spots réels" BackgroundColor="#28A745" TextColor="White" />
                </StackLayout>
            </Frame>
            
            <Frame
                Padding="15"
                BorderColor="#0066CC"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="🔍 Diagnostic de base de données" />
                    <Label Text="Affiche les statistiques détaillées sur le contenu de la base de données" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding ShowDatabaseDiagnosticsCommand}" Text="🔍 Afficher les diagnostics" BackgroundColor="#0066CC" TextColor="White" />
                </StackLayout>
            </Frame>
            
            <Frame
                Padding="15"
                BorderColor="#DC3545"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="🚨 Diagnostic ultra-profond" />
                    <Label Text="Test ultra-complet de la connectivité, des tables, des données et des services" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding RunUltraDeepDiagnosticCommand}" Text="🚨 Diagnostic ultra-profond" BackgroundColor="#DC3545" TextColor="White" />
                </StackLayout>
            </Frame>

            <Frame
                Padding="15"
                BorderColor="#9B59B6"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="🔍 Diagnostic détaillé des types de spots" />
                    <Label Text="Analyse complète des types de spots, catégories et extensions pour la nouvelle organisation" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding RunDetailedDatabaseDiagnosticCommand}" Text="🔍 Diagnostic détaillé" BackgroundColor="#9B59B6" TextColor="White" />
                </StackLayout>
            </Frame>

            <Frame
                Padding="15"
                BorderColor="#E74C3C"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="🔄 Recréation forcée des données" />
                    <Label Text="⚠️ DANGER: Supprime TOUTES les données et recrée la base avec les 8 nouveaux types de spots" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding ForceRecreateDataCommand}" Text="🔄 Recréer les données" BackgroundColor="#E74C3C" TextColor="White" />
                </StackLayout>
            </Frame>

            <Frame
                Padding="15"
                BorderColor="#27AE60"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="🎯 Migration EF Core des types de spots" />
                    <Label Text="✅ RECOMMANDÉ: Migre la base existante vers les 8 nouveaux types (préserve les données)" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding ExecuteSpotTypeMigrationCommand}" Text="🎯 Exécuter la migration EF Core" BackgroundColor="#27AE60" TextColor="White" />
                </StackLayout>
            </Frame>

            <Frame
                Padding="15"
                BorderColor="#3498DB"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="📊 État de la migration" />
                    <Label Text="Vérifie si la migration a été appliquée et affiche le statut détaillé" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding CheckMigrationStatusCommand}" Text="📊 Vérifier l'état" BackgroundColor="#3498DB" TextColor="White" />
                </StackLayout>
            </Frame>

            <Frame
                Padding="15"
                BorderColor="#FF6F00"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="🔧 Exécuter la migration de catégories" />
                    <Label Text="{Binding IsCategoryMigrationExecuted, StringFormat='Migration exécutée: {0}'}">
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsCategoryMigrationExecuted}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsCategoryMigrationExecuted}"
                                TargetType="Label"
                                Value="False">
                                <Setter Property="TextColor" Value="Red" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Label Text="Exécute la migration FixSpotTypeCategoryMapping pour mettre à jour les catégories existantes" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding ExecuteCategoryMappingMigrationCommand}" Text="🔧 Exécuter migration" BackgroundColor="#FF6F00" TextColor="White" />
                </StackLayout>
            </Frame>

            <Frame
                Padding="15"
                BorderColor="#9C27B0"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="🔍 Analyser les problèmes de filtrage" />
                    <Label Text="Diagnostic approfondi du système de filtrage par catégorie après migration" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding AnalyzeFilteringIssuesCommand}" Text="🔍 Analyser filtrage" BackgroundColor="#9C27B0" TextColor="White" />
                </StackLayout>
            </Frame>
            
            <Frame
                Padding="15"
                BorderColor="#E91E63"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="🔧 Corriger la structure ActivityCategory" />
                    <Label>
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsCategoryStructureMigrated}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="Text" Value="✅ Structure corrigée" />
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsCategoryStructureMigrated}"
                                TargetType="Label"
                                Value="False">
                                <Setter Property="Text" Value="❌ Structure à corriger" />
                                <Setter Property="TextColor" Value="Red" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Label Text="Corrige le problème architectural: Boutiques apparaissant dans Structures" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding FixActivityCategoryStructureCommand}" Text="🔧 Corriger structure" BackgroundColor="#E91E63" TextColor="White" />
                </StackLayout>
            </Frame>
            
            <Frame
                Padding="15"
                BorderColor="#FF5722"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="🩺 Diagnostic des types de spots" />
                    <Label Text="Analyse complète de l'état des types de spots et détection des problèmes" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding DiagnoseSpotTypesCommand}" Text="🩺 Diagnostiquer" BackgroundColor="#FF5722" TextColor="White" />
                </StackLayout>
            </Frame>
            
            <Frame
                Padding="15"
                BorderColor="#4CAF50"
                CornerRadius="10">
                <StackLayout Spacing="10">
                    <Label FontAttributes="Bold" Text="🛠️ Réparer les types de spots" />
                    <Label>
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding IsSpotTypesRepaired}"
                                TargetType="Label"
                                Value="True">
                                <Setter Property="Text" Value="✅ Types réparés" />
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding IsSpotTypesRepaired}"
                                TargetType="Label"
                                Value="False">
                                <Setter Property="Text" Value="❌ Réparation requise" />
                                <Setter Property="TextColor" Value="Red" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Label Text="Corrige automatiquement les doublons et répare les liens spots ↔ types" FontSize="12" TextColor="Gray" />
                    <Button Command="{Binding RepairSpotTypesCommand}" Text="🛠️ Réparer" BackgroundColor="#4CAF50" TextColor="White" />
                </StackLayout>
            </Frame>
            
            <!-- Section des logs -->
            <Frame
                Padding="15"
                BackgroundColor="#F8F8F8"
                BorderColor="#DDDDDD"
                CornerRadius="10"
                HeightRequest="200">
                <ScrollView>
                    <Label
                        FontFamily="{OnPlatform Default='monospace', Android='monospace', iOS='Courier', WinUI='Consolas'}"
                        FontSize="12"
                        Text="{Binding LogMessages}" />
                </ScrollView>
            </Frame>
            
            <!-- Indicateur de chargement -->
            <ActivityIndicator
                HorizontalOptions="Center"
                IsRunning="{Binding IsLoading}"
                IsVisible="{Binding IsLoading}"
                VerticalOptions="Center" />
                
        </StackLayout>
    </ScrollView>
</ContentPage>